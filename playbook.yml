---
- hosts: all
  become: yes 
  tasks:
    - name: Check connection
      ping:
      register: ping_output

    - name: Display connectivity
      debug:
        msg: "Successfully connected" 
      when: '"pong" == ping_output.ping'

    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto
    
    - name: Check if the package is installed
      debug:
        msg: "Package is installed"
      when: "'docker-ce' in ansible_facts.packages or 'docker-ce-cli' in ansible_facts.packages"

    - name: Check if the package is not installed
      debug:
        msg: "Package is not installed"
      when: "'docker-ce' not in ansible_facts.packages or 'docker-ce-cli' not in ansible_facts.packages"     

    - name: ansible_distribution_release
      debug:
        msg: "{{ ansible_distribution_release }}"
  

    - name: Deploy a Docker application
      block: 
        - name: Install required packages
          apt:
            name: ["apt-transport-https", "ca-certificates", "curl", "software-properties-common"]
            state: present  

        - name: Add Docker GPG key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present  

        - name: Add Docker repository
          apt_repository:
            repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} edge"
            state: present
        
        - name: Update apt packages
          apt:
            update_cache: yes

              #  - name: Install Docker
              # shell: "apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin"  
          #apt:
          #  name: docker-ce
          #  state: present
          #  update_cache: yes

        - name: Start and enable Docker service
          service:
            name: docker
            enabled: yes
            state: started           
      when: "'docker-ce' not in ansible_facts.packages or 'docker-ce' not in ansible_facts.packages"
      
      rescue:
        - name: Rescue block
          debug: 
            msg: "Don't worry"
 
    - name: Log into DockerHub
      community.docker.docker_login:
        username: "anilnalawade"
        password: "NilNik@143"
              
    - name: Pull Docker image
      docker_image:
        name: anilnalawade/e2e-demo-app:v1
        source: pull

    - name: Run Docker container
      docker_container:
        name: e2e-demo-container
        image: anilnalawade/e2e-demo-app:v1
        state: started     
        ports: 
          - "8000:80"  
